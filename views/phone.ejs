<!DOCTYPE html>
<html lang="en">
<head><title><%= phone %> - cuipp-remote-controller</title>

<link rel='stylesheet' href='/css/keyboard.css' />
<link rel='stylesheet' href='/bootstrap/css/bootstrap.min.css' />
<body>


<img id='phoneScreen' src='<%= imageUrl %>'>

<div id='keyboard'>

</div>


<!-- 
TODO: Replace the old-timey method of using an invisible iframe with some 
javascript magic, and make fancy things like visual feedback of keys being pushed
and error detection if a key push was unsuccesful.
-->
<iframe name='void' id='void' style='display:none'></iframe>

<script>

// Dinamically add all buttons here, just for making the code a bit more readable and less copy-pasty.
// Keys are internal names, values are visible text
var buttons = {
	'KeyPad0'    :'0',
	'KeyPad1'    :'1',
	'KeyPad2'    :'2',
	'KeyPad3'    :'3',
	'KeyPad4'    :'4',
	'KeyPad5'    :'5',
	'KeyPad6'    :'6',
	'KeyPad7'    :'7',
	'KeyPad8'    :'8',
	'KeyPad9'    :'9',
	'KeyPadPound':'#',
	'KeyPadStar' :'*',
	'Soft1'   :'',
	'Soft2'   :'',
	'Soft3'   :'',
	'Soft4'   :'',
	'Soft5'   :'',
	'NavBack'  :'↶',
	'NavDwn'   :'↓',
	'NavLeft'  :'←',
	'NavRight' :'→',
	'NavSelect':'OK',
	'NavUp'    :'↑',
	
	'Offhook'     :'<span class="glyphicon glyphicon-earphone"   aria-hidden="true"></span>',
	'Onhook'      :'<span class="glyphicon glyphicon-earphone"   aria-hidden="true"></span>',

	'Applications':'<span class="glyphicon glyphicon-th"         aria-hidden="true"></span>',
	'AppMenu'     :'<span class="glyphicon glyphicon-th-list"    aria-hidden="true"></span>',
	'Services'    :'SRV',
	'Settings'    :'<span class="glyphicon glyphicon-wrench"     aria-hidden="true"></span>',
	'PTT'         :'PTT',
	'Release'     :'REL',

	'Info'        :'<span class="glyphicon glyphicon-info-sign"  aria-hidden="true"></span>',
	'Hold'        :'<span class="glyphicon glyphicon-pause"      aria-hidden="true"></span>',
	'Contacts'    :'<span class="glyphicon glyphicon-user"       aria-hidden="true"></span>',
	'Directories' :'<span class="glyphicon glyphicon-book"       aria-hidden="true"></span>',
	'Messages'    :'<span class="glyphicon glyphicon-envelope"   aria-hidden="true"></span>',

	'Headset'     :'<span class="glyphicon glyphicon-headphones" aria-hidden="true"></span>',
	'Speaker'     :'<span class="glyphicon glyphicon-bullhorn"    aria-hidden="true"></span>',
	'Mute'        :'<span class="glyphicon glyphicon-volume-off"  aria-hidden="true"></span>',
	'VolDwn'      :'<span class="glyphicon glyphicon-volume-down" aria-hidden="true"></span>',
	'VolUp'       :'<span class="glyphicon glyphicon-volume-up"   aria-hidden="true"></span>',

}



// TODO: Implement (and decide a position and text/symbol) for the rest of the possible keys:
// 
// Key:Feature1 to Key:Feature120
// Key:FixedFeature1 to 3
// Key:Line1 to Key:Line120
// Key:Session1 to Key:Session6



for (i in buttons) {

	// Let's create something like this without jQuery:
	//<button class='btn' target='void' href='/push/<%= phone %>/KeyPad0' id='btn-0'>0</button>

	var button = document.createElement('button');
	button.className = 'btn';
	button.id = 'btn-' + i;
	button.innerHTML = buttons[i];
	button.onclick = (function(key){return function(ev) {
		document.getElementById('void').src = '/push/<%= phone %>/' + key;
	}})(i);
	
	document.getElementById('keyboard').appendChild(button);

}



// Use the old trick of appending a hash plus a timestamp to force refreshing the image.

var errorDelay = 1000;

function refreshImage(){
	document.getElementById('phoneScreen').src = '<%= imageUrl %>#' + Date.now();
}

document.getElementById('phoneScreen').onerror = function(ev) {
	window.setTimeout(refreshImage, errorDelay);
	errorDelay *= 2;
}

document.getElementById('phoneScreen').onload= function(ev) {
	window.setTimeout(refreshImage, 5000);
	errorDelay = 1000;
}



</script>
</html>